{
  "permissions": {
    "allow": [
      "Bash(.venv/Scripts/python.exe test_optimizer.py)",
      "Bash(.venvScriptspython.exe diagnose_strategy.py)",
      "Bash(\".venv/Scripts/python.exe\" diagnose_strategy.py)",
      "Bash(\".venv/Scripts/python.exe\" diagnose_strategy.py --profile MODERATE)",
      "Bash(\".venv/Scripts/python.exe\":*)",
      "Bash(\".venv/Scripts/python.exe\" diagnose_strategy.py --profile MODERATE --days 90 --granularity 5m)",
      "Bash(\".venv/Scripts/pip.exe\" install xgboost joblib -q)",
      "Bash(\".venv/Scripts/python.exe\" train_ml_model.py --days 90 --profile MODERATE)",
      "Bash(\".venv/Scripts/python.exe\" ensemble_strategy.py --days 180 --profile MODERATE --ml-threshold 0.7)",
      "Bash(\".venv/Scripts/python.exe\" ensemble_strategy.py:*)",
      "Bash(\".venv/Scripts/python.exe\" ensemble_strategy.py --days 180 --profile MODERATE --granularity 5m --ml-threshold 0.6)",
      "Bash(\".venv/Scripts/python.exe\" ensemble_strategy.py --days 180 --profile MODERATE --granularity 5m --ml-threshold 0.55)",
      "Bash(\".venv/Scripts/python.exe\" ensemble_strategy.py --days 180 --profile MODERATE --granularity 5m --ml-threshold 0.7)",
      "Bash(\".venv/Scripts/python.exe\" train_ml_model.py --days 180 --profile MODERATE --granularity 5m)",
      "Bash(\".venv/Scripts/python.exe\" compare_models.py --days 180 --granularity 5m)",
      "Bash(\".venv/Scripts/python.exe\" compare_models_v2.py --days 180 --granularity 5m)",
      "Bash(\".venv/Scripts/python.exe\" ensemble_strategy_v2.py --days 180 --granularity 1h)",
      "Bash(\".venv/Scripts/python.exe\" optimize_trade_frequency.py --days 180 --granularity 1h)",
      "Bash(\".venv/Scripts/python.exe\" scalping_optimizer.py --days 180 --granularity 15m)",
      "Bash(\".venv/Scripts/python.exe\" scalping_optimizer.py --days 180 --granularity 30m)",
      "Bash(\".venv/Scripts/python.exe\" dip_buyer_v2.py --days 30 --granularity 15m --test-size 0.7)",
      "Bash(\".venv/Scripts/python.exe\" hybrid_xgb_technical.py --days 180 --granularity 15m)",
      "Bash(\".venv/Scripts/python.exe\" hybrid_xgb_technical.py --days 180 --granularity 5m --test-size 0.3)",
      "Bash(\".venv/Scripts/python.exe\" optimize_hybrid.py --days 180)",
      "Bash(\".venv/Scripts/python.exe\" simulate_1btc.py)",
      "Bash(\".venv/Scripts/python.exe\" scalp_xgb_v3.py --days 180 --granularity 5m --test-size 0.3)",
      "Bash(\".venv/Scripts/python.exe\" scalp_xgb_v3.py:*)",
      "Bash(\".venv/Scripts/python.exe\" compare_scalping_strategies.py --compare --sweep --days 180 --granularity 5m --test-size 0.3)",
      "Bash(\".venv/Scripts/python.exe\" dip_buyer_smart.py:*)",
      "Bash(\".venv/Scripts/python.exe\" dip_buyer_smart.py --days 180 --granularity 5m --test-size 0.3 --confidence 0.55)",
      "Bash(\".venv/Scripts/python.exe\" dip_buyer_smart.py --days 180 --granularity 15m --test-size 0.3 --confidence 0.6)",
      "Bash(\".venv/Scripts/python.exe\" hybrid_simple_dip.py --days 180 --granularity 5m)",
      "Bash(\".venv/Scripts/python.exe\" hybrid_simple_dip.py --days 180 --granularity 15m)",
      "Bash(\".venv/Scripts/python.exe\" xgb_dip_buyer_15m.py --days 180 --granularity 15m --test-size 0.3)",
      "Bash(\".venv/Scripts/python.exe\" compare_sma_strategies.py --days 180 --granularity 5m)",
      "Bash(\".venv/Scripts/python.exe\" detailed_sma_analysis.py)",
      "Bash(\".venv/Scripts/python.exe\" enhanced_sma_comparison.py)",
      "Bash(\".venv/Scripts/python.exe\" optimize_sma_periods.py)",
      "Bash(\".venv/Scripts/python.exe\" dip_buyer_comprehensive.py --days 180 --granularity 15m)",
      "Bash(\".venv/Scripts/python.exe\" dip_buyer_comprehensive.py --days 180 --granularity 1h)",
      "Bash(\".venv/Scripts/python.exe\" hybrid_ml_direction.py --days 180 --granularity 1h --horizon 12)",
      "Bash(\".venv/Scripts/python.exe\" optimize_dip_stops.py)",
      "Bash(\".venv/Scripts/python.exe\" sma_long_hold.py)",
      "Bash(\".venv/Scripts/python.exe\" sma_aggressive_filters.py)",
      "Bash(\".venv/Scripts/python.exe\" sma_ultimate_test.py --days 180)",
      "Bash(\".venv/Scripts/python.exe\" sma_ultimate_test.py --days 360)",
      "Bash(\".venv/Scripts/python.exe\" volume_ml_combo.py --days 360)",
      "Bash(\".venv/Scripts/pip.exe\" install pyyaml plotly -q)",
      "Bash(\".venv/Scripts/pip.exe\" list)",
      "Bash(findstr:*)",
      "Bash(\".venv/Scripts/pip.exe\" install pyyaml)",
      "Bash(\".venv/Scripts/python.exe\" production_strategy.py --profile WINNER --days 360)",
      "Bash(tree:*)",
      "Bash(\".venv/Scripts/python.exe\" src/production_strategy.py --profile WINNER --days 360)",
      "Bash(\"..\\.venv\\Scripts\\python.exe\" production_strategy.py --profile WINNER --days 360)",
      "Bash(\"..\\..\\.venv\\Scripts\\python.exe\" production_strategy.py --profile WINNER --days 360)",
      "Bash(python:*)",
      "Bash(\"../.venv/Scripts/python.exe\" production_strategy.py --profile WINNER --days 360)",
      "Bash(\"../.venv/Scripts/python.exe\" main.py --profile WINNER --days 360)",
      "Bash(\"../.venv/Scripts/python.exe\" main.py --profile WINNER --days 90)"
    ],
    "deny": [],
    "ask": []
  }
}
